@if (_isOpen)
{
    <div class="modal">
        <div class="modal-dialog @ClassSize" role="dialog" aria-hidden="true">
            <div class="modal-content">
                <div class="modal-header">
                    @Header
                </div>
                <div class="modal-body">
                    <ModalEditFormContainer ModelFn="@EditFormModelFn" ValidSubmitAsync="@EditFormValidSubmitAsync">
                        @Body
                    </ModalEditFormContainer>
                </div>
                <div class="modal-footer">
                    @Footer
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop" aria-hidden="true"></div>
}

@code {

    private bool _isOpen;

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public RenderFragment Header { get; set; }

    [Parameter]
    public ModalSize Size { get; set; }

    [Parameter]
    public Func<object> EditFormModelFn { get; set; } = () => null;

    [Parameter]
    public Func<Task> EditFormValidSubmitAsync { get; set; }

    private string ClassSize
    {
        get
        {
            return Size switch
            {
                ModalSize.Small => "modal-sm",
                ModalSize.Medium => "modal-md",
                ModalSize.Large => "modal-lg",
                ModalSize.XLarge => "modal-xl",
                _ => ""
                };
        }
    }

    public void Open()
    {
        _isOpen = true;
        StateHasChanged();
    }

    public void Close()
    {
        _isOpen = false;
        StateHasChanged();
    }

}
